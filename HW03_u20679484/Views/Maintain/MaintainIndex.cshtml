@using PagedList
@using PagedList.Mvc

@model HW03_u20679484.Models.CombinedViewModel

@{
    ViewBag.Title = "MaintainIndex";
}

<style>
    /* Custom CSS for zebra striping, header style, and vertical lines */
    table.table-striped {
        border-collapse: collapse;
        width: 100%;
    }

        table.table-striped th, table.table-striped td {
            border: 1px solid #ffffff;
            padding: 8px;
            text-align: left;
        }

        table.table-striped thead {
            background-color: #343a40;
            color: white;
        }

        table.table-striped tbody tr:nth-child(odd) {
            background-color: #f9f9f9;
        }

        table.table-striped tbody tr:nth-child(even) {
            background-color: #e9e9e9;
        }

    /* Styles for the links */
    .create-link {
        color: #007BFF;
    }

    .edit-link {
        color: #FFC107;
    }

    .delete-link {
        color: #DC3545;
    }

    .details-link {
        color: #17A2B8;
    }

    /* Style for pagination buttons */
    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        list-style: none;
    }

        .pagination li {
            margin: 0 5px;
        }

        .pagination a {
            display: block;
            padding: 5px 10px;
            background-color: #007BFF;
            color: #fff;
            text-decoration: none;
            border-radius: 5px;
        }

            .pagination a:hover {
                background-color: #0056b3;
            }
</style>

<div class="row">
    <div class="col-md-12">
        <h2>Authors</h2>

        <p>
            <a href="#" class="create-link btn btn-primary" data-url="@Url.Action("Create", "authors")">Create New Author</a>
        </p>

        <table class="table table-striped" style="width:100%">
            <!-- Display Authors data -->
            <tr>
                <th style="background-color: hotpink">
                    ID
                </th>
                <th style="background-color: hotpink">
                    Name
                </th>
                <th style="background-color: hotpink">
                    Surname
                </th>
                <th style="background-color: hotpink">CRUD</th>
            </tr>
            @foreach (var author in Model.Authors)
            {
                <tr>
                    <td>
                        @author.authorId
                    </td>
                    <td>
                        @author.name
                    </td>
                    <td>
                        @author.surname
                    </td>
                    <td class="text-end">
                        <a href="#" class="btn btn-primary edit-link" data-url="@Url.Action("Edit", "authors", new { id = author.authorId })">Edit</a>
                        <a href="#" class="btn btn-info details-link" data-url="@Url.Action("Details", "authors", new { id = author.authorId })">Details</a>
                        <a href="#" class="btn btn-danger delete-link" data-url="@Url.Action("Delete", "authors", new { id = author.authorId })">Delete</a>
                    </td>
                </tr>
            }
        </table>
        @Html.PagedListPager(
            Model.Authors, // Pass the Authors paged list
            page => Url.Action("MaintainIndex", new { authorPage = page }),
            new PagedListRenderOptions
            {
                Display = PagedListDisplayMode.IfNeeded,
                DisplayPageCountAndCurrentLocation = true,
                MaximumPageNumbersToDisplay = 5,
            }
        )
    </div>
    <div class="col-md-12">
        <h2>Types</h2>

        <p>
            <a href="#" class="create-link btn btn-primary" data-url="@Url.Action("Create", "types")">Create New Type</a>
        </p>

        <table class="table table-striped" style="width:100%">
            <!-- Display Types data -->
            <tr>
                <th style="background-color: hotpink">
                    ID
                </th>
                <th style="background-color: hotpink">
                    Name
                </th>
                <th style="background-color: hotpink">CRUD</th>
            </tr>
            @foreach (var type in Model.Types)
            {
                <tr>
                    <td>
                        @type.typeId
                    </td>
                    <td>
                        @type.name
                    </td>
                    <td class="text-end">
                        <a href="#" class="btn btn-primary edit-link" data-url="@Url.Action("Edit", "types", new { id = type.typeId })">Edit</a>
                        <a href="#" class="btn btn-info details-link" data-url="@Url.Action("Details", "types", new { id = type.typeId })">Details</a>
                        <a href="#" class="btn btn-danger delete-link" data-url="@Url.Action("Delete", "types", new { id = type.typeId })">Delete</a>
                    </td>
                </tr>
            }
        </table>
        @Html.PagedListPager(
            Model.Types, // Pass the Types paged list
            page => Url.Action("MaintainIndex", new { typePage = page }),
            new PagedListRenderOptions
            {
                Display = PagedListDisplayMode.IfNeeded,
                DisplayPageCountAndCurrentLocation = true,
                MaximumPageNumbersToDisplay = 5,
            }
        )
    </div>
    <div class="col-md-12">
        <h2>Borrows</h2>

        <p>
            <a href="#" class="create-link btn btn-primary" data-url="@Url.Action("Create", "borrows")">Create New Borrow</a>
        </p>

        <table class="table table-striped" style="width:100%">
            <!-- Display Borrows data -->
            <tr>
                <th style="background-color: hotpink">
                    ID
                </th>
                <th style="background-color: hotpink">
                    Student ID
                </th>
                @*<th style="background-color:dimgrey">
                    Book ID
                </th>*@
                <th style="background-color: hotpink">
                    Taken Date
                </th>
                <th style="background-color: hotpink">
                    Brought Date
                </th>
                <th style="background-color: hotpink">
                    CRUD
                </th>
            </tr>
            @foreach (var borrow in Model.Borrows)
            {
                <tr>
                    <td>
                        @borrow.borrowId
                    </td>
                    <td>
                        @borrow.studentId
                    </td>
                    @*<td>
                        @borrow.bookId
                    </td>*@
                    <td>
                        @borrow.takenDate
                    </td>
                    <td>
                        @borrow.broughtDate
                    </td>
                    <td class="text-end">
                        <a href="#" class="btn btn-primary edit-link" data-url="@Url.Action("Edit", "borrows", new { id = borrow.borrowId })">Edit</a>
                        <a href="#" class="btn btn-info details-link" data-url="@Url.Action("Details", "borrows", new { id = borrow.borrowId })">Details</a>
                        <a href="#" class="btn btn-danger delete-link" data-url="@Url.Action("Delete", "borrows", new { id = borrow.borrowId })">Delete</a>
                    </td>
                </tr>
            }
        </table>
        @Html.PagedListPager(
            Model.Borrows, // Pass the Borrows paged list
            page => Url.Action("MaintainIndex", new { borrowPage = page }),
            new PagedListRenderOptions
            {
                Display = PagedListDisplayMode.IfNeeded,
                DisplayPageCountAndCurrentLocation = true,
                MaximumPageNumbersToDisplay = 5,
            }
        )
    </div>
</div>

<div id="myModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Async CRUD</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal-content">
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.min.js"></script>
<script>
    $(function () {
        // Function to handle Edit link click event in the Combined View and Details modal
        $(".edit-link, .edit-link-in-modal").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");

            $.get(url, function (data) {
                $("#modal-content").empty();
                $("#modal-content").html(data);
                $("#myModal").modal("show");
            });
        });

        // Function to handle form submission within the modal
        $("#modal-content").on("submit", "form", function (e) {
            e.preventDefault();
            var form = $(this);
            var url = form.attr("action");
            var formData = form.serialize();

            $.post(url, formData, function (data) {
                $("#myModal").modal("hide");
                location.reload();
            });
        });

        // Function to handle other links (details, delete, create) within the modal
        $(".details-link, .delete-link, .create-link, .create-lookup-link").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");

            $.get(url, function (data) {
                $("#modal-content").empty();
                $("#modal-content").html(data);
                $("#myModal").modal("show");
            });
        });
    });
</script>
